#!/usr/bin/env python2.7
import gettext
import locale
import os
import os.path
import filecmp
import sys
import shutil

sys.path.insert(0, "/opt/meocloud/libs/")

if not os.path.isfile("/opt/meocloud/core/meocloudd"):
    print "Core not found. Aborting."
    sys.exit(1)

# warn about unavailable libraries
try:
    import keyring
except ImportError:
    print "Keyring unavailable. Please install python-keyring."
    sys.exit(1)

try:
    import thrift
except ImportError:
    print "Thrift unavailable. Please install python-thrift."
    sys.exit(1)

try:
    from dbus.mainloop.glib import DBusGMainLoop
except ImportError:
    print "D-Bus unavailable. Please install dbus-python."
    sys.exit(1)

try:
    from gi.repository import Gtk, GLib, Gdk
except ImportError:
    print "GTK is required. Please install GTK+ 3 with the GIR bindings."
    sys.exit(1)

try:
    from gi.repository import Notify
except ImportError:
    print "Notify is required. Please install the Notify GIR bindings."
    sys.exit(1)

from meocloud_gui.application import Application


def init_localization():
    '''prepare l10n'''
    locale.setlocale(locale.LC_ALL, '')
    filename = "mo/%s.mo" % locale.getlocale()[0][0:2]
    path = os.path.join(os.path.dirname(os.path.realpath(__file__)), filename)

    try:
        trans = gettext.GNUTranslations(open(path, "rb"))
    except IOError:
        trans = gettext.NullTranslations()

    trans.install()


if __name__ == "__main__":
    if getattr(sys, "frozen", False):
        own_path = sys.executable
    else:
        own_path = os.path.realpath(__file__)

    trans_src = os.path.join(os.path.dirname(own_path), "mo")
    trans_dst = os.path.join(os.path.expanduser('~'),
                             '.local/share/nautilus-python/extensions/'
                             'meocloud_mo')

    nautilus_py = os.path.join(os.path.dirname(own_path),
                               "meocloud_nautilus/meocloud-nautilus.py")
    nautilus_dir = os.path.join(os.path.expanduser('~'),
                                '.local/share/nautilus-python/extensions')
    nautilus_dst = os.path.join(nautilus_dir, "meocloud-nautilus.py")

    nemo_py = os.path.join(os.path.dirname(own_path),
                           "meocloud_nemo/meocloud-nemo.py")
    nemo_dir = os.path.join(os.path.expanduser('~'),
                            '.local/share/nemo-python/extensions')
    nemo_dst = os.path.join(nemo_dir, "meocloud-nemo.py")

    caja_py = os.path.join(os.path.dirname(own_path),
                           "meocloud_caja/meocloud-caja.py")
    caja_dir = os.path.join(os.path.expanduser('~'),
                            '.local/share/caja-python/extensions')
    caja_dst = os.path.join(caja_dir, "meocloud-caja.py")

    if not os.path.exists(nautilus_dir):
        os.makedirs(nautilus_dir)

    if not os.path.exists(nemo_dir):
        os.makedirs(nemo_dir)

    if not os.path.exists(caja_dir):
        os.makedirs(caja_dir)

    if os.path.exists(trans_src) and not os.path.exists(trans_dst):
        if os.path.lexists(trans_dst):
            if os.path.islink(trans_dst):
                 os.unlink(trans_dst)
            else:
                shutil.rmtree(trans_dst)

        os.symlink(trans_src, trans_dst)

    if os.path.isfile(nautilus_dst):
        if not filecmp.cmp(nautilus_py, nautilus_dst):
            os.remove(nautilus_dst)
            os.symlink(nautilus_py, nautilus_dst)
    else:
        os.symlink(nautilus_py, nautilus_dst)

    if os.path.isfile(nemo_dst):
        if not filecmp.cmp(nemo_py, nemo_dst):
            os.remove(nemo_dst)
            os.symlink(nemo_py, nemo_dst)
    else:
        os.symlink(nemo_py, nemo_dst)

    if os.path.isfile(caja_dst):
        if not filecmp.cmp(caja_py, caja_dst):
            os.remove(caja_dst)
            os.symlink(caja_py, caja_dst)
    else:
        os.symlink(caja_py, caja_dst)

    init_localization()
    GLib.threads_init()
    Gdk.threads_init()
    app = Application(os.path.dirname(own_path))
    app.run(None)
